% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ct.R
\name{filterCT}
\alias{filterCT}
\title{Filter CT value on different condition.}
\usage{
filterCT(file, sample = "Sample.Name", target = "Target.Name", ct = "Ct",
  ctlimit = c(15, 40), ampscore = 0.6, undet = NULL, phenotype = NULL,
  ctd = 2, omit = NULL, out = "filterCT")
}
\arguments{
\item{file}{Object output of \link[AsaLab]{readCT}.}

\item{sample}{Sample column name. Default "Sample.Name"}

\item{target}{Target column name. Default "Target.Name"}

\item{ct}{CT column name. Default "Ct"}

\item{ctlimit}{Limit to keep CT value. Default min= 15 and max = 40.}

\item{ampscore}{Amplification score to reject the sample. Default 0.6}

\item{undet}{Value to replace undetermine. Default is NULL. Input value should be numeric.}

\item{phenotype}{group classification for sample name.}

\item{ctd}{Absulute difference between ct values to accept. Default is 2. See user documentation for details.}

\item{omit}{If "TRUE" , sample with TRUE value in omit column will delete. Default is NULL.}

\item{out}{Name of output file to save the result in CSV formate. Default name "filterCT".}
}
\value{
This function will return a dataframe of filtered CT values. Also this result will save in CSV formate in current working
directory and default name of the file is  filterCT.csv
}
\description{
Filter CT value on different condition. See details.
}
\details{
Details of criteria to delete CT values.
For phenotype, The 1st column should be sample name and the column name will be same as the column name of sample in input file.
And the second column will be the classification for each sample.The unclassified sample will show NA. If the phonotype
dataframe is supplied, in the output dataframe a phenotype colun will show otherwise not.
}
\examples{
###### Example 1
# Read expression data
sfile  <- "D:\\\\R Working\\\\Workflow\\\\Data\\\\Asa\\\\celiac3_20161222_123248_Results_Export.txt"
mdata  <- readCT(file = sfile)
sname  <- unlist(lapply(strsplit(mdata$Sample.Name," "),"[",1))
mdata$Sample.Name <- sname
# Read phynotype data
phen   <- read.csv (file="D:\\\\R Working\\\\Workflow\\\\Data\\\\Asa\\\\role-multiple.txt", sep="\\t")
# Filter CT valued data and add phynotype
res    <- filterCT (file = mdata,omit = "True",phenotype = phen)


###### Example 2
# Read expression data
sfile  <- "D:\\\\R Working\\\\Workflow\\\\Data\\\\simon_20161102_134801_Results_Export.txt"
mdata  <- readCT(file = sfile)
# Read phynotype data
phen   <- read.csv (file="D:\\\\R Working\\\\Workflow\\\\Data\\\\pheno.txt",sep="\\t")
# Filter CT valued data and add phynotype
res    <- filterCT (file = mdata,omit = "True",phenotype = phen)


###### Example 3
# Read expression data
sfile  <- "D:\\\\R Working\\\\Workflow\\\\Data\\\\CT.txt"
mdata  <- readCT(file = sfile, skip = 0, header = FALSE)
# Read phynotype data
phen   <- read.csv (file="D:\\\\R Working\\\\Workflow\\\\Data\\\\phenotypes.txt",sep="\\t")
# Filter CT valued data and add phynotype
res    <- filterCT (file = mdata,sample = "Sample", target = "Detector", phenotype = phen)


####### Example
# Read expression data
sfile  <- system.file("extdata", "Ahlam-biopsies_20170920_131310.txt", package = "AsaLab")
mdata  <- readCT(file = sfile, skip = 14, header = FALSE)

# Read phynotype data
pfile <- system.file("extdata", "Ahlam-biopsies_20170920_131310_pheno.txt", package = "AsaLab")
phen   <- read.csv (file = pfile, sep="\\t")

# Filter CT valued data and add phynotype
res    <- filterCT (file = mdata,sample = "Sample.Name", target = "Target.Name", phenotype = phen)

}
